'use strict'
const divisor = 4503599627370517n
const eulerNumber = 1504170715041707n
const r1 = 3n*eulerNumber-divisor
const r2 = 169n*r1-eulerNumber
const eulerCoins = [eulerNumber,r1,r2]
let i=1n
let j=5n
let lastR=r2
let lastI=0
let lastJ=1n
while(true){
    let r = j*r2-i*r1
    if(r>0&&r<lastR){
        console.log(r,i,j)
        lastI=i
        lastJ=j
        lastR=r
        eulerCoins.push(r)
    }
    i+=1n
    j=(i*lastJ-1n)/lastI
    if(!Number.isInteger(Number(j))){
        i+=1n
    }
    if(r===1n){
        eulerCoins.push(r)
        break
    }
}

console.log(eulerCoins.reduce((x,y)=>x+y))

// 3n 8912517754604n
// 506n 2044785486369n
// 2527n 1311409677241n
// 4548n 578033868113n
// 11117n 422691927098n
// 17686n 267349986083n
// 24255n 112008045068n
// 55079n 68674149121n
// 85903n 25340253174n
// 202630n 7346610401n
// 724617n 4046188430n
// 1246604n 745766459n
// 6755007n 428410324n
// 12263410n 111054189n
// 42298633n 15806432n
// 326125654n 15397267n
// 609952675n 14988102n
// 893779696n 14578937n
// 1177606717n 14169772n
// 1461433738n 13760607n
// 1745260759n 13351442n
// 2029087780n 12942277n
// 2312914801n 12533112n
// 2596741822n 12123947n
// 2880568843n 11714782n
// 3164395864n 11305617n
// 3448222885n 10896452n
// 3732049906n 10487287n
// 4015876927n 10078122n
// 4299703948n 9668957n
// 4583530969n 9259792n
// 4867357990n 8850627n
// 5151185011n 8441462n
// 5435012032n 8032297n
// 5718839053n 7623132n
// 6002666074n 7213967n
// 6286493095n 6804802n
// 6570320116n 6395637n
// 6854147137n 5986472n
// 7137974158n 5577307n
// 7421801179n 5168142n
// 7705628200n 4758977n
// 7989455221n 4349812n
// 8273282242n 3940647n
// 8557109263n 3531482n
// 8840936284n 3122317n
// 9124763305n 2713152n
// 9408590326n 2303987n
// 9692417347n 1894822n 3237199471n
// 9976244368n 1485657n 3331995707n

